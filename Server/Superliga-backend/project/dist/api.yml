openapi: 3.0.0
info:
  title: api
  description: API for  project
  version: 1.0.0
tags:
  - name: Users
  - name: Auth
  - name: League
  - name: Players
  - name: Teams
  - name: Matches
  - name: Search
  - name: AssociationMember
paths:


  /Register:
    post:
      tags:
        - Auth
      summary: Add new user
      description: A new user from the client is added to the server
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: A new user has been added
        "400":
          description: Missing Parameters
        "409":
          description: Username taken   


  /Login:
    post:
      tags:
        - Auth
      summary: Login an exist user
      description: An exist user login to the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginScheme"
      responses:
        "200":
          description: >
            User was found in the DB and authenitcated successfully.
            The session ID is returned in a cookie named `session`. 
            You should include this cookie in subsequent requests
          # headers:
          #   Set-Cookie:
          #     schema:
          #       type: string
          #       example: session=87s97sdhgf279293f8w0e9
            # Note that the Set-Cookie header and securitySchemes are not connected in any way, and the Set-Header definition is for documentation purposes only.
        "401":
          description: Authentication failed


  /logout:
    post:
      tags:
        - Auth
      summary: logout a user from the system and delete his cookie
      responses:
        "200":
          description: "the user has ben successfully logged out"


  /league/getDetails:
    get:
      tags:
        - League
      summary: Return the details about the current league
      responses:
        "200":
          description: data about the current league returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/League"
                  
                  
  /users/associationMember/addMatch:
    post:
      tags:
        - User
        - AssociationMember
        - Matches
      summary: AssociationMember add match to DB
      description:   AssociationMember add match to DB , future match
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/addMatchSchema"
      responses:
        "201":
          description: new match has been added
        '400':
          description: worng parameters
        "403":
          description: only association Member can use this function

  /users/associationMember/updateMatch:
    put:
      tags:
        - User
        - AssociationMember
        - Matches
      summary: AssociationMember update match in DB
      description:   AssociationMember add match to DB , future match
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateMatchScheme"
      responses:
        "200":
          description: The match update successfully
        '400':
          description: worng parameters
        "403":
          description: only association Member can use this function          
    
    
  /users/associationMember/addReferee:
    post:
      tags:
        - User
        - AssociationMember
        - Matches
      summary: AssociationMember add referee to DB
      description:   AssociationMember add referee to DB
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefereeAddScheme"             
      responses:
        "200":
          description: Referee Already in DB
        "201":
          description : The Referee successfully saved
        "403":
          description: only association Member can use this function


  /users/associationMember/addEventCalender:
    post:
      tags:
        - User
        - AssociationMember
        - Matches 
      summary: AssociationMember add eventCalender to match
      description:   AssociationMember add array of events to match in DB
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventCalender"
      responses:
        "201":
          description: the event calender was added successfully
        "400":
          description: worng parameters
        "403":
          description: only association Member can use this function                 



  /users/favorite/matches:
    get:
      tags:
        - User
        - Matches
      summary: user favorite matches
      description: sent to the client the current favorite matches
      responses:
        '200':
          description: the details send successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MatchPrev"
        '204':
          description: there is no favorite matches
        '401':
          description: the user must be login to the system



    post:
      tags:
        - User
        - Matches
      summary: adding a Match to favorite list
      description: adding a new Match to the user favorite Match list
      requestBody:
        required: true
        content:
          application/json: 
            schema:
              type: object
              properties:
                match_id:
                  type: integer
                  description: Match ID 
                  example: 55
      responses: 
        '201':
          description: New Match was been added to the favorite Match list
        '204':
          description: match already in your favorite list  
        '400':
          description: worng input parameters
        '401':
          description: the user must be login to the system



  /teams/teamFullDetails/{teamId}:
    get:
      summary: get full deatils about a team
      description: useful for team page
      tags:
        - Teams
      parameters:
        - in: path
          name: teamId
          description: team's id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: data about the team
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
        "404":
          description: teamId is not exists



  /search/team/{NameToSearch}:
    get:
      tags:
        - Search
        - Team
      summary: Search Team
      description: sent to the client a list of Teams that contains the string NameToSearch
      parameters:
        - name: NameToSearch
          in: path
          description: string to search 
          required: true
          schema:
            type: string
            example: "Arse"
      responses:
        '200':
          description: the search find teams
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TeamPrev"
        '204':
          description: the search didn't find results



  /search/player/{NameToSearch}:
    get:
      tags:
        - Search
        - Player
      summary: Search Player
      description: sent to the client a list of Players that contains the string NameToSearch
      parameters:
        - name: NameToSearch
          in: path
          description: string to search 
          required: true
          schema:
            type: string
            example: "Ede"
      responses:
        '200':
          description: the search find Players
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PlayerPreview"
        '204':
          description: the search didn't find results


  /league/getStageMatches:
    get:
      tags:
        - Matches
        - League
      summary: show all the stage matches
      description: sent to the client 2 list of games, one is prev games and the other is futher games of this stage
      responses:
        '200':
          description: data about StageMatches
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StageMatchesArray'


components:
  schemas:
    addMatchSchema:
      type: object
      properties:
        date:
          type: string
          description: dateTime of the Match
          example: "2021-06-09T15:55:43.170Z"
        home_team_id:
          type: integer
          description: home team id number
          example: 1020
        away_team_id:
          type: integer
          description: away team id number
          example: 939
        referee_id:
          type: integer
          description: referee id in db
          example: 1
        stadium:
          type: string
          description: name of the stadium
          example: san-siro

    User:
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          description: username conatins between 3 to 8 letters only
          example: ladygaga
        firstname:
          type: string
          description: user's first name
          example: Stefani
        lastname:
          type: string
          description: user's last name
          example: Germanotta
        country:
          type: string
          description: user's country
          example: USA
        password:
          maxLength: 10
          minLength: 5
          type: string
          description:
            password conatins between 5 to 10 chars, at least one of them
            is a number and a special char
          format: password
          example: lady@56
        email:
          pattern: email
          type: string
          description: user's email
          example: ladygaga@gmail.com
        image_url:
          pattern: URL
          type: string
          description: URL for the user's image
          example: https://cloudinary.com/
      description: Model containing user info
    
    UpdateMatchScheme:
      type: object
      properties:
        match_id:
          type: integer
          description: id of match in DB
          example: 2
        home_team_goals:
          type: integer
          description: goals that home team scored
          example: 0
        away_team_goals:
          type: integer
          description: goals that awat team scored
          example: 2  



    LoginScheme:
      type: object
      properties:
        username:
          type: string
          minLength: 3
          maxLength: 8
          description: username conatins letters only
          example: tomervar
        password:
          type: string
          minLength: 5
          maxLength: 10
          format: password
          description: password conatins at least one number and one special char
          example: tomer@1234


    League:
      type: object
      properties:
        league_name:
          type: string
          description: league name
          example: Superliga
        current_season_name:
          type: string
          description: current season name
          example: "2020/2021"
        current_stage_name:
          type: string
          description: current stage name
          example: Championship Round
        nextGameDetails:
          $ref: '#/components/schemas/MatchDetails'

    MatchPrev:
      type: object
      properties:
        Match_Id:
          type: integer
          description: the id of the match in db
          example: 1
        Date:
          type: string
          format: date
          description: the date of the game
          example: "31/05/2012"
        Hour:
          type: string
          format: hour
          description: the time of the game 
          example: "16:00"
        HomeTeamPrev:
          $ref: '#/components/schemas/TeamPrev'
        AwayTeamPrev:
          $ref: '#/components/schemas/TeamPrev'
        Stadium:
          type: string
          description: the name of the stadium
          example: cump now
        RefereeID:
          type: integer
          description: the id of the referee in db
          example: 2
        Referee_name:
          type: string
          description: the name of the referee
          example: tomer varon

    TeamPrev:
      type: object
      properties:
        Team_Id:
          type: integer
          description: the id of the home team
          example: 1020
        Team_name:
          type: string
          description: the name of the home team
          example: arsenal
        Team_img:
          type: string
          format: url
          description: the img of the away team 
          example: "https://cdn.sportmonks.com/images//soccer/teams/21/85.png"

    MatchDetails:
      type: object
      required:
        - Match_Id
        - Date
        - Hour
        - HomeTeamPrev
        - AwayTeamPrev
        - Staduim
        - Referee
      properties:
        Match_Id:
          type: integer
          description: the id of the match in db
          example: 1020
        Date:
          type: string
          format: date
          description: the date of the game
          example: "31/05/2012"
        Hour:
          type: string
          format: hour
          description: the time of the game 
          example: "16:00"
        HomeTeamPrev:
          $ref: '#/components/schemas/TeamPrev'
        AwayTeamPrev:
          $ref: '#/components/schemas/TeamPrev'
        Staduim:
          type: string
          description: Staduim's name
          example: "Tedi"
        Referee:
          $ref: '#/components/schemas/Referee'   



    Match:
      type: object
      required:
        - MatchDetails
        - HomeTeamGoals
        - AwayTeamGoals
        - EventCalender
      properties:
        MatchDetails:
          $ref: '#/components/schemas/MatchDetails'
        HomeGoals:
          type: integer
          description: the number of goals that Home team score
          example: 2
        AwayGoals:
          type: integer
          description: the number of goals that Away team score
          example: 4
        EventCalender:
          $ref: '#/components/schemas/EventCalender'          
     


    EventCalender:
      type: object
      required:
        - match_id
        - events
      properties:
        match_id:
          type: integer
          description: match id
          example: 3
        eventCalender:
          type: array
          items:
            $ref: '#/components/schemas/MatchEvent'

    MatchEvent:
      type: object
      required:
        - event_date
        - event_time
        - minute
        - game_event
      properties:
        event_date:
          type: string
          format: date
          description: the date of the game
          example: "31/05/2012"
        event_time:
          type: string
          format: hour
          description: the time of the game 
          example: "16:00"
        minute:
          type: integer
          description: the time in the game 
          example: 65
        game_event:
          type: string
          description: >
            Event description from the next list
            "GOAL","OFFSIDE","FOUL","RED_CARD","YELLOW_CARD","INJURY","SUB".
          example: "GOAL"

    RefereeAddScheme:
      type: object
      properties:
        first_name:
          type: string
          description: first name conatins letters only
          example: matan
        last_name:
          type: string
          description: last name contains letters only
          example: ohayon

    Referee:
      type: object
      properties:
        RefereeID:
          type: integer
          description: the id of the referee in db
          example: 1
        Full_name:
          type: string
          description: Full name conatins letters only
          example: matan ohayon

    StageMatchesArray:
      type: object
      required:
        - PreMatches
        - futherMatches
      properties:
        PreMatches:
          type: array
          items:
            $ref: '#/components/schemas/Match'
        FutureMatches:
          type: array
          items:
            $ref: '#/components/schemas/MatchDetails'



    PlayerPreview:
      type: object
      properties:
        name:
          type: string
          description: player's name
          example: Sten Michael Grytebust
        image_url:
          type: string
          description: player's image
          format: URL
          example: https://cdn.sportmonks.com/images/soccer/players/11/84587.png
        PositionNumber:
          type: integer
          description: player's position in team
          example: 1
        PositionName:
          type: string
          description: player's position name
          example: Attacker
        team_name:
          type: string
          description: player's team name
          example: København

    CoachPreview:
      type: object
      required:
        - name
        - team_name
        - image-url
      properties:
        name:
          type: string
          description: Coach's name
          example: "Zinedine zidan"
        team_name:
          type: string
          description: player's team name
          example: København
        image-url:
          type: string
          format: url
          description: url for the Coach's image
          example: "https://upload.wikimedia.org/wikipedia/commons/thumb/f/f3/Zinedine_Zidane_by_Tasnim_03.jpg/330px-Zinedine_Zidane_by_Tasnim_03.jpg"

    Team:
      type: object
      properties:
        TeamPrev:
          $ref: "#/components/schemas/TeamPrev"
        Team_players:
          type: array
          items:
            type: object
            $ref: "#/components/schemas/PlayerPreview"
        Team_matches:
          type: array
          items:
            past_matches:
              type: object
              $ref: "#/components/schemas/Match"
            next_matches:
              type: object
              $ref: "#/components/schemas/MatchDetails"



